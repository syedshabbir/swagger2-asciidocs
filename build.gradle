buildscript {
	ext {
		springBootVersion = '1.5.8.RELEASE'
		swagger2markupVersion = '1.3.3'
		springfoxVersion = '2.7.0'
		asciiDocOutputDir = file("$buildDir/asciidoc")
	}
	repositories {
		mavenCentral()
		jcenter()
	}
	dependencies {
		classpath "org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}" 
		classpath 'io.github.swagger2markup:swagger2markup-gradle-plugin:1.3.3'
		classpath 'org.asciidoctor:asciidoctor-gradle-plugin:1.5.3'
        classpath "io.github.swagger2markup:swagger2markup:${swagger2markupVersion}"
        classpath "io.github.swagger2markup:swagger2markup-import-files-ext:${swagger2markupVersion}"
	}
}

plugins {
    id 'java'
    id 'eclipse'
    id "org.springframework.boot" version "1.5.8.RELEASE"
    id 'com.benjaminsproule.swagger' version '1.0.0'
}

apply plugin: 'io.github.swagger2markup'
apply plugin: 'org.asciidoctor.convert'
apply plugin: 'org.springframework.boot'
apply plugin: 'java'
apply plugin: 'io.spring.dependency-management'


version = System.env.PROJECT_VERSION == null ? "1.0" : System.env.PROJECT_VERSION

tasks.withType(JavaCompile) {
    sourceCompatibility = "1.8"
    targetCompatibility = "1.8"
    options.deprecation = true
    options.encoding = 'UTF-8'
    options.compilerArgs << "-Xlint:unchecked"
}

configurations {
    compile
}

dependencies {
    compile "org.springframework.boot:spring-boot-starter-data-jpa:${springBootVersion}"
    compile "org.springframework.boot:spring-boot-starter-actuator:${springBootVersion}"
    compile "org.springframework.boot:spring-boot-starter-web:${springBootVersion}"

    compile 'org.postgresql:postgresql:42.1.4'

    compile 'com.google.guava:guava:23.0'
    
    compile 'io.swagger:swagger-core:1.5.16'
    compile "io.springfox:springfox-swagger2:${springfoxVersion}"
    compile "io.springfox:springfox-swagger-ui:${springfoxVersion}"
    compile "io.springfox:springfox-bean-validators:${springfoxVersion}"
    
    asciidoctor 'org.asciidoctor:asciidoctorj-pdf:1.5.0-alpha.15'
    
    testCompile "org.springframework.boot:spring-boot-starter-test:${springBootVersion}"
}


swagger {
    apiSource {
        springmvc = true
        locations = [ 'gradle.swagger.docs.controller.ContentMappingController' ]
        schemes = [ 'http', 'https' ]
        host = 'localhost:8080'
        basePath = '/'
        info {
            title = 'Swagger Gradle Asciidocs and PDF Generation'
            version = 'v1'
            description = 'How to generate docs at build time'
            termsOfService = 'http://bmj.com/terms'
            contact {
                email = 'email@email.com'
                name = 'who am I?'
                url = 'http://www.example.com'
            }
            license {
                url = 'http://www.apache.org/licenses/LICENSE-2.0.html'
                name = 'Apache 2.0'
            }
        }
        swaggerDirectory = "$buildDir/generated/swagger-ui"
		outputFormats = ['yaml','json']
    }
}


convertSwagger2markup {
    swaggerInput "$buildDir/generated/swagger-ui/swagger.json"
    outputDir file("$buildDir/asciidoc")
    outputFile file("$buildDir/asciidoc/swagger")
    config = ['swagger2markup.markupLanguage' : 'ASCIIDOC',
              'swagger2markup.pathsGroupedBy' : 'TAGS',
              'swagger2markup.extensions.dynamicOverview.contentPath' : file('src/docs/asciidoc/extensions/overview').absolutePath]
}

asciidoctorj {
    version = '1.5.3'
}

asciidoctor {
    dependsOn convertSwagger2markup
    sources {
        include 'index.adoc'
    }
    backends = ['html5', 'pdf']
    options doctype: 'book'
    attributes = [            
            toc: 'left',
            toclevels: '3',
            numbered: '',
            sectlinks: '',
            sectanchors: '',
            hardbreaks: '',
            'source-highlighter': 'coderay',
            'pdf-stylesdir': 'theme',
            'pdf-style': 'custom',
            generated: asciiDocOutputDir
    ]
}

asciidoctor.doLast {
    copy {
        from file("${asciiDocOutputDir}/html5")
		from file("${asciiDocOutputDir}/pdf")
        into file("${rootDir}/src/main/resources/public")
        include '*.*'
    }
}

jar {
    dependsOn asciidoctor
    baseName = project_name
    version = version
    manifest {
        attributes(
            "Implementation-Title": project_name,
            "Implementation-Version": version,
			"Main-Class": "gradle.swagger.docs.Application"
        ) 
    }
}

task wrapper(type: Wrapper) {
    gradleVersion = '4.3.1'
}